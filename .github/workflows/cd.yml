name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_ec2_public_key: ${{ secrets.EC2_PUBLIC_KEY }}
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_ec2_public_key: ${{ secrets.EC2_PUBLIC_KEY }}
      run: terraform apply -auto-approve
      working-directory: ./terraform

    - name: Save Terraform output
      id: save_output
      run: |
        echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
      working-directory: ./terraform

  ansible:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install Ansible
      run: pip install ansible
      
    - name: Debug environment
      run: env
    - name: Create inventory file
      run: |
        echo "[Terraform-ec2]" > inventory
        echo "${{ env.instance_ip }} ansible_user=ubuntu" >> inventory

    - name: Run Ansible playbook
      run: ansible-playbook -i inventory ./ansible/playbooks/docker-setup.yml
